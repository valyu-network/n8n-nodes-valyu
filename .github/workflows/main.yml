name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  # Always run CI/CD checks
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18, 20]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        run: npm ci

      - name: Run linting
        run: npm run lint

      - name: Run format check
        run: npm run format -- --check

      - name: Build package
        run: npm run build

      - name: Check build output
        run: |
          echo "Checking if dist directory was created..."
          ls -la dist/
          echo "Checking node files..."
          ls -la dist/nodes/
          echo "Checking credentials files..."
          ls -la dist/credentials/

  # Only publish when pushing to main branch and version has changed
  publish:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    outputs:
      version-changed: ${{ steps.check.outputs.changed }}
      version: ${{ steps.check.outputs.version }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org'

      - name: Check if version changed
        id: check
        run: |
          # Get current version from package.json
          CURRENT_VERSION=$(node -p "require('./package.json').version")
          echo "Current version: $CURRENT_VERSION"
          
          # Check if this version exists on NPM
          if npm view n8n-nodes-valyu@$CURRENT_VERSION version 2>/dev/null; then
            echo "Version $CURRENT_VERSION already exists on NPM"
            echo "changed=false" >> $GITHUB_OUTPUT
          else
            echo "Version $CURRENT_VERSION is new"
            echo "changed=true" >> $GITHUB_OUTPUT
          fi
          
          echo "version=$CURRENT_VERSION" >> $GITHUB_OUTPUT

      - name: Install dependencies
        if: steps.check.outputs.changed == 'true'
        run: npm ci

      - name: Build package
        if: steps.check.outputs.changed == 'true'
        run: npm run build

      - name: Publish to NPM
        if: steps.check.outputs.changed == 'true'
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Create GitHub release
        if: steps.check.outputs.changed == 'true'
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.check.outputs.version }}
          release_name: Release v${{ steps.check.outputs.version }}
          body: |
            ## Changes in v${{ steps.check.outputs.version }}
            
            Automatically published to NPM.
            
            Install with: `npm install n8n-nodes-valyu@${{ steps.check.outputs.version }}`
          draft: false
          prerelease: false